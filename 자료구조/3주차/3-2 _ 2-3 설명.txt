
words_i - 2 ::  단어들 사이의 칸의 수 (예: A A B -> 글자 개수는 3개 칸은 2개)
80 - length :: 글자 사이에 해야하는 띄어쓰기의 총 수
						
char *words[MAX]를 이용해서 단어를 하나씩 저장했기 때문에 단어들 사이에 공백을 넣어줄 것임 
L 값은 공백이 얼마 만큼 필요한지를 알게 해주는 값임 
공백이 균형적으로 이루어져야 하므로 단어사이에 들어가야할 공백의 수를 계산하고 그만큼 앞 단어부터 넣어줄 것임
L + 1이 앞에서부터 들어가야 하는 공백의 수고, L은 그 외 나머지 단어들 사이에 균형적으로 분포되어야 하는 값
L + 1의 공백이 몇개의 글자사이까지 분포되어야 하는 지가 문제 
L = 0일 때 i < 80 - length 의 글자 수 만큼 공백을 분포시키고 
L > 0일 때 80 - length 를 words_i-2 로 나눈 나머지 만큼 분포시킴

결론은

L 은 공백의 수를 정해주는 거고 
그 외 80 - length, (80 - length) % (words_i - 2) 는 몇개의 글자 사이까지 다른 글자들보다 하나 더 많은 공백 L + 1개가 분포되어야 하는 지를 결정해 주는 것

