// 구조체의 배열은 간편하게 작성할 수 있으나 복사되어야 하는 수가 많다
// 그렇다면 어떻게 하는 게 더 나을까?
// 구조체의 포인터를 사용해보자

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define CAPACITY 100
#define BUFFER_LENGTH 100

typedef struct person {
	char *name;
	char *number;
	char *email;
	char *group;
} Person;

Person * directory[CAPACITY]; 

// struct 타입의 person의 객체의 주소를 저장하는
// 각 칸안이 아니고 따로 다른 곳에 저장되고, 그 주소를 저장하는 것이다

int n = 0;

void print_person(Person *p) { 
	// directory는 포인터이므로 p도 포인터이다

	/*
	printf("%s:\n", (*p).name); 
	// 값들의 복사가 아닌 p라는 곳에 주소값만 복사됨
	// 이렇게 한다면 복사되는 양은 주소값 하나임
	printf("	Phone: %s\n", (*p).number);
	printf("	Email: %s\n", (*p).email);
	printf("	Group: %s\n", (*p).group);
	*/

	// *p.name 되면 *가 .보다 연산순서가 낮기 때문에 의도대로 안되고
	// (*p).name 으로 해주어야 한다 !!! 

	printf("%s:\n", p->name);
	printf("	Phone: %s\n", p->number);
	printf("	Email: %s\n", p->email);
	printf("	Group: %s\n", p->group);
	// p가 무언가를 가리키는 포인터일 때 화살표 연산자를 쓴다
	// (*p).name 와 p->name은 같은 것!! 
	// 더 간결히 표현 가능하기 때문에 이렇게 더 더 더 쓴다 !! 
}