// 구간을 정하고 나서도 
// 계속 루트 M으로 나눠서 최소값 비교한다.

#include <stdio.h>
#include <math.h>
#define MAX 10000

int arrange[MAX];

int main() {
	
	int N;
	
	FILE *fp = fopen("data.txt", "r");
	fscanf(fp, "%d", &N);
	for (int i = 0; i < N; i++) {
		fscanf(fp, "%d", &arrange[i]);
	}

	int M = sqrt(N);
	int SMALL[MAX] = { 0, };
	int index_[MAX] = { 0, };

	// 그룹핑
	// N개씩 자르는 거임. 

	for (int a = 0; a < N; a++) {

		// 정수형끼리 하면 제대로 안잘릴 수도
		if (a%M == 0) {
			SMALL[a / M] = arrange[a];
			index_[a / M] = a;
			continue;
		}

		if (SMALL[a / M] > arrange[a]) {
			SMALL[a / M] = arrange[a];
			index_[a / M] = a;
		}

	}

	int i, j;

	for (int k = 0; k < M; k++) {
		printf("원하는 구간을 입력하세요.");
		scanf("%d %d", &i, &j);

		int small;

		if (i <= index_[i / M] && j >= index_[j / M]) {
			small = SMALL[i / M];
			for (int a = i / M + 1; a <= j / M; a++)
				if (small > SMALL[a])
					small = SMALL[a];
			printf("%d~%d 구간의 최소값은 %d입니다.\n", i, j, small);
		}

		// 7~9
		else if (i > index_[i / M] && j >= index_[j / M]) {
			small = arrange[i];
			for (int a = i + 1; a < (i / M + 1) * M; a++)
				if (small > arrange[a])
					small = arrange[a];
			for (int a = i / M + 1; a <= j / M; a++)
				if (small > SMALL[a])
					small = SMALL[a];
			printf("%d~%d 구간의 최소값은 %d입니다.\n", i, j, small);
		}

		// 6~12
		else if (i <= index_[i / M] && j < index_[j / M]) {
			small = SMALL[i / M];
			for (int a = i / M + 1; a < j / M; a++)
				if (small > SMALL[a])
					small = SMALL[a];
			for (int a = j / M * M; a <= j; a++)
				if (small > arrange[a]) {
					small = arrange[a];
				}
			printf("%d~%d 구간의 최소값은 %d입니다.\n", i, j, small);
		}

		// [12, 9] [1, 4] [10, 1] [7, 8] [9, 3] [6, 11] [8, 2]
		// [12, 9,1,4] [10,1,7,8] [9,3,6,11,8] [2]
		// index까지 출력하는 방법은 그냥..인덱스 출력하면 된다. 쩝
		// 귀찮아서 건너뛰겠음..

		// 7~10
		else if (i > index_[i / M] && j < index_[j / M]) {
			small = arrange[i];
			for (int a = i + 1; a < (i / M + 1) * M; a++)
				if (small > arrange[a])
					small = arrange[a];
			for (int a = i / M + 1; a < j / M; a++)
				if (small > SMALL[a])
					small = SMALL[a];
			for (int a = j / M * M; a <= j / M; a++)
				if (small > arrange[a])
					small = arrange[a];
			printf("%d~%d 구간의 최소값은 %d입니다.\n", i, j, small);
		}

	}
}

