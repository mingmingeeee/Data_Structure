
동적메모리 할당

-> 변수를 선언하는 대신 사용할 만큼 프로그램의 요청으로 메모리를 할당할 수 있음

-> malloc 함수 사용   

->

p = (int *)malloc(40); // 40바이트 할당 하고 사용타입 변환

#include <stdio.h>

int main() {

	int * p;
	p = (int *)malloc(40);

	if (p == NULL) {
		/* 동적 메모리 할당이 실패 */
		/* 적절한 조치를 취한다. */
	}

	/*
	할당 받는 다면 !!!!
	malloc으로 할당된 메모리는 보통의 배열처럼 사용할 수 있다.
	p[0]
	p[1]
	*(p+2)
	*/
	
}


#include <stdio.h>
#include <stdlib.h>

int main() {

	// int * array = (int *)malloc(4 * sizeof(int)); // 16byte

	int array[4];

	// -> 정수 4랑 malloc이랑 서로 중요한 차이가 있다.
	// 그것은 바로 바로 array = tmp 맞지 않는 문장 -> 배열의 이름을 주면 값을 변경할 수 없으므로 중요한 차이가 있는 것이다.

	array[0] = 1;
	array[1] = 2;
	*(array + 2) = 3;

	/* 배열 array의 크기가 부족한 상황이 발생한다. */


	/* 다른 공간에 더 큰 메모리를 할당받은 다음에 배열을 옮긴다. */
	int * tmp = (int *)malloc(8 * sizeof(int));
	int i;
	for (i = 0; i < 4; i++)
		tmp[i] = array[i];

	array = tmp; 
	// array : 처음 시작 주소
	// tmp : 나중 시작 주소
	// 포인터 변수들 간 끼리니까 같음 -> 새로운 시작 주소를 array가 얻게 됨
	// 이렇게 옮기는 것으로 마치 배열의 크기를 키운 것 같은 효과를 줌 !!!


	// -> array가 원래 갖고 있던 메모리 주소는 그냥 쓰레기가 되어버림... 그래서 이 코드는 그닥 좋은 코드가 아니당...
	// 필요 이상의 메모리를 사용하고 있는 것이 된당...
}
