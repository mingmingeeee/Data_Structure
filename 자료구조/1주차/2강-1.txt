/*
// 문자열은 뒤에 공백 문자 널 캐릭터가 저장된다

// 하나씩 저장해도 된다.
// 귀찮으면
char str[] = "hello"; 자동으로 크기를 6으로 잡아서 가능하게 한다.
// 로 해도 된다.
// str이 배열자체의 이름이므로 배열 안의 내욜을 바꿀 수는 있지만
// 배열 자체가 다른 배열을 가리키게 할 수는 없다.

-----------------------------------------------------------------------------------------------

char *str = "hello"; // -> 배열을 바꿀 수 없다.
// hello를 만든 다음 그 시작 주소를 리턴해주면 그것을 포인터 변수에 저장하는 것이다.
// string literal -> 수정이 불가능하다.
// str이 다른 배열을 가리키게 할 수 있다.
*/

/*
strcpy 문자열 복사
strlen 문자열의 길이
strcat 문자열 합치기
strcmp 문자열 비교
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define BUFFER_SIZE 100

int main() {

	char * words[100]; 
	int n = 0; //number of strings
	char buffer[BUFFER_SIZE];
	//누군가의 주소를 넣어둘 것임 -> 단어 하나의 길이가 100을 넘지는 않을 것이다.

	while (n < 4 && scanf("%s", buffer) != EOF) {
		// scanf("%d, &a)
		//배열의 이름이 실제 그 배열의 주소를 저장하고 있는 값이기 때문에 & 붙이지 않아도 됨

		words[n] = strdup(buffer); 
		// strcpy(str2,str1) -> str1을 str2로 복사
		// words[n]은 문자배열은 아니므로 좀... 
		// 그래서 strdup
		// strdup : 매개변수로 하나의 문자열을 받아 그 문자의 복제본을 받아 그 걸 전해주는 역할을 한다.
		n++;

	}

	for (int i = 0; i < 4; i++)
		printf("%s\n", words[i]);

}